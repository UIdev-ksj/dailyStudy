01. 개요 및 프로젝트 구성
    ECMASrcipt = ES = JS
    ES2015 부터는 뒤에 년도를 붙임
    환경세팅
    - script 내 defer속성 : html구조를 다 해석 후 실행


02. 원시형 - String, Number
    String
        "" or '' 둘중 하나 선택
        ``(백틱) : 데이터를 문자데이터내에 보관하는 용도, 다른 데이터(변수)를 ${데이터}(템플릿 리터럴) 방식으로 넣을수 있다.
    Number
        숫자 데이터를 넣는다. 기본은 양수, 음수는 앞에 -붙임
        소수도 가능하며 앞숫자가 0일땐 삭제가능
    Nan : 데이터는 숫자인데 숫자로 표기가 안될때 표시, 숫자가 아닌 데이터가 표시 될수있으니 확인 (부정의미)
    typeof : 데이터 타입확인
    .toFixed(숫자) : ()안의 숫자만큼 소수점 표시, 숫자데이터를 문자로 변경하게됨
    Number() : 강제로 ()안을 number 타입으로 변경


03. 원시형 - Boolean, null, undefined
    Boolean : true, false 값을 가지고 있다. 분기처리를 할수가 있다.
    null : 존재하지 않는다. 값이 없다. 명시적
    undefined : 값이 없다. 암시적 (자동으로 입력됨)
    null과 undefined 차이 확인

    let : 변수가 바뀔수도 있다.
    const : 고정값


04. 참조형 - Array
    new Array() : 생성자 함수, 자바스크립트 클래스, []안에 넣어도 된다. (배열리터럴)
    배열데이터에서 []안의 인덱스 번호를 통해 불러올수 있다. 인덱싱.
    배열안의 아이템 혹은 요소(element)
    length 는 갯수를 가지게 된다.
    data.length : 숫자를 알수 있다. 배열의 길이를 알수없을때 찾아볼수있다.


05. 참조형 - Object
    new Object() : 오브젝트 함수 생성, 리터럴방식 (객체리터럴)
    새로운 속성추가 및 값을 할당할수 있다.
    :(콜론)으로 구분되어 있는 구조를 key value 형태라고 한다.
    key : 속성(property)
    value : 값
    리터럴 방식이 많이 쓰임
    객체데이터 내부에서 속성 키는 순서가 존재하지 않는다.
    같은 속성의 값이 들어가게 되면 마지막 값이 적용된다.
    객체데이터 안의 객체데이터의 뎁스가 계속 들어갈수 있다.


06. 참조형 - Function
    함수를 만들고 함수명을 적으면 call or 호출 이라 한다.
    함수는 하나의 데이터이며 ()소괄호를 이용해 호출시켜야된다.
    소괄호가 없으면 전혀 다른 데이터 값이다.
    함수자체에 이름이 없다면 익명함수라하고 한다.
    

07. 형 변환(Type Conversion)
    형 = type, javascript의 데이터의 종류
    === 일치연산자
    == 동등연산자, 데이터의 종류를 스스로 바꿔 비교한다
    되도록이면 일치연산자(===)를 사용
    숫자데이터 0과 false 는 동등연산자에서는 true로 나온다.
    숫자데이터 1과 true 는 동등연산자에서는 true로 나온다.
    자동으로 형변환이 일어나므로 일치연산자로 사용해야된다.


08. 참과 거짓(Truthy & Falsy)
    Boolean 값에만 적용되진 않는다.
    숫자데이터는 true이나 0은 false로 처리된다.
    문자데이터는 true로 인식되어 진다.
    false로 인식되어진 데이터 값을 알아두면 된다.
    1) false
    2) 0
    3) null
    4) undefinded
    5) Nan
    6) '' (빈문자)
    7) 0n (BigInt라는 타입)
    나머진 true 인식되어진다.
    
    배열데이터 = true


09. 데이터 타입 확인
    typeof에서 null, [], {}는 object로 구분이 된다.
    constructor를 속성을 이용하여 Array, Object를 구분할수있다. (Null은 불가능)
    null구분은 Object.prototype.toString.call(null).slice(8, -1) === 'Null' 확인할수 있다.
